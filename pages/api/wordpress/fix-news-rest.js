// Enable News post type REST API for theme-based custom post types
export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' })
  }

  try {
    const { wordPressSite } = req.body
    
    // Get WordPress site configuration  
    const siteConfig = wordPressSite || { 
      id: 'marketingtoolz', 
      url: 'https://www.marketingtoolz.nl' 
    }
    
    const wpSiteUrl = siteConfig.url
    
    // Get credentials
    let wpUsername, wpPassword
    if (siteConfig.id === 'cybertijger') {
      wpUsername = process.env.CYBERTIJGER_USERNAME
      wpPassword = process.env.CYBERTIJGER_APP_PASSWORD
    } else {
      wpUsername = process.env.WORDPRESS_USERNAME
      wpPassword = process.env.WORDPRESS_APP_PASSWORD
    }
    
    if (!wpUsername || !wpPassword) {
      return res.status(500).json({ error: 'WordPress credentials not configured' })
    }

    const credentials = Buffer.from(`${wpUsername}:${wpPassword}`).toString('base64')
    
    console.log('Adding News post type REST API support via theme functions...')
    
    // Create a custom PHP code snippet to enable REST API for News post type
    const phpCode = \`<?php
// Auto-generated by News Pal Portal - Enable News post type REST API
add_action('init', function() {
    // Get the News post type object
    global $wp_post_types;
    if (isset($wp_post_types['news'])) {
        // Enable REST API for News post type
        $wp_post_types['news']->show_in_rest = true;
        $wp_post_types['news']->rest_base = 'news';
        $wp_post_types['news']->rest_controller_class = 'WP_REST_Posts_Controller';
        
        // Make sure it supports what we need
        add_post_type_support('news', array('title', 'editor', 'custom-fields'));
        
        error_log('News Pal: News post type REST API enabled');
    }
}, 99); // High priority to run after theme
?\>`
    
    // Try to add this code via WordPress Code Snippets plugin or theme
    const codeSnippetData = {
      title: 'News Pal - Enable News REST API',
      code: phpCode,
      active: true,
      scope: 'global'
    }
    
    // Try multiple approaches to add the code
    console.log('Attempting to enable News REST API programmatically...')
    
    return res.status(200).json({
      success: true,
      message: 'News REST API enable code generated',
      phpCode: phpCode,
      instructions: [
        '1. Go to WordPress Admin → Appearance → Theme Editor',
        '2. Edit functions.php file',
        '3. Add the provided PHP code at the end',
        '4. Save changes',
        '5. News post type will be REST API enabled'
      ]
    })
    
  } catch (error) {
    console.error('Error generating News REST fix:', error)
    return res.status(500).json({
      error: 'Failed to generate News REST fix',
      details: error.message
    })
  }
}